import React from "react";
import Head from "next/head";
import Logo from "@/components/Logo";
import ProgressBar from "@/components/ProgressBar";
import FormikStepper, { FormikStep } from "@/components/FormikStepper";
import * as Yup from "yup";
import { useContext, useState } from "react";
import { ProgressContext } from "@/context/progress";
import InputField from "@/components/InputField";
import RadioBtnGroup from "@/components/RadioBtnGroup";
import CheckboxGroup from "@/components/CheckboxGroup";
import TextArea from "@/components/TextArea";
import SplitScreen from "@/Layout/SplitScreen";
import SelectField from "@/components/SelectField";
import Checkbox from "@/components/Checkbox";
import { StatesContext } from "@/context/states";

const RequestCare = () => {
  const { progress } = useContext(ProgressContext);
  const {
    nationalityOptions: countryOptions,
    stateOptions,
    lgasOptions,
    setCurrentState,
  } = useContext(StatesContext);

  const initialValues = {
    healthCondition: "",
    preferenceDescription: "",
    services: "",
    existingCustomer: "",
    bookingCapacity: "",
    sponsorDetails: {
      firstname: "",
      lastname: "",
      email: "",
      phone: "",
      country: "",
      state: "",
      lga: "",
      city: "",
    },
    beneficiaryDetails: {
      firstname: "",
      lastname: "",
      dateOfBirth: "",
      gender: "",
      phone: "",
      email: "",
      address: "",
      state: "",
      lga: "",
    },
    emergencyContact: {
      firstname: "",
      lastname: "",
      email: "",
      phone: "",
      address: "",
      state: "",
      lga: "",
      workPattern: "",
    },
    terms: false,
  };

  const onSubmit = async (values, { resetForm }, onSubmitProps) => {
    console.log(values);
  };

  const selectServicesOptions = [
    { id: "meal-prep", label: "Meal Preparation" },
    { id: "feeding", label: "Feeding" },
    { id: "personal-care", label: "Bathing and Personal Care" },
    { id: "bedside-care", label: "Bedside care for minor temporary illness" },
    {
      id: "medication-supervision",
      label: "Medication supervision and dispensing",
    },
    { id: "mobility", label: "Assistance with mobility and transfers" },
    { id: "hospital-escort", label: "Hospital escort" },
    { id: "outings-excort", label: "Social outings escort" },
    { id: "errands", label: "Errands and Groceries" },
    { id: "laundry", label: "Laundry" },
    { id: "housekeeping", label: "HouseKeeping" },
    {
      id: "medical-doctor",
      label: "Consultation, Assessment or Treatment by Medical Doctor",
    },
    {
      id: "nursing-services",
      label: "Nursing services by a Registered Nurse",
    },
    {
      id: "medical-rehabilation",
      label:
        "Physiotherapy and medical rehabilation by a Physiotherapist or Rehabilation Therapist",
    },
    {
      id: "maternity-assistance",
      label:
        "Maternity assistance to pregant mother, new born baby or newborn mother",
    },
    { id: "other", label: "Other" },
  ];

  const existingConsumerOptions = [
    { id: "yes", label: "I am an existing customer" },
    { id: "no", label: "I am a new customer" },
    { id: "not-sure", label: "Not Sure" },
  ];

  const bookingCapacityOptions = [
    {
      id: "sponspor",
      label: "As a Sponsor (paying for a family member or beneficiary)",
    },
    {
      id: "agency",
      label:
        "As an Agency (company facilitating the care services for a client)",
    },
    {
      id: "client",
      label: "As a Client (booking the care services for myself)",
    },
  ];

  const genderOptions = [
    { value: "Select Gender" },
    { value: "Male" },
    { value: "Female" },
    { value: "Others" },
  ];

  const workPatternOptions = [
    {
      id: "fulltime",
      label: "Live In - Full time (Caregiver lives with Client on full time)",
    },

    {
      id: "nights",
      label: "Live In - Nights (Caregiver sleeps over with Client)",
    },

    {
      id: "weekends",
      label:
        "Live In - Weekends (Caregiver lives with Client only on weekends)",
    },

    {
      id: "daily",
      label:
        "Live Out - Daily (Caregiver resumes every morning and closes in the evening)",
    },

    {
      id: "ad-hoc",
      label: "Ad hoc (Caregiver attends to Client whenever required)",
    },

    {
      id: "others",
      label: "Others",
    },
  ];

  return (
    <>
      <Head>
        <title>GeroCare - Home Care Request</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link
          href="https://fonts.googleapis.com/css2?family=DM+Serif+Display&display=swap"
          rel="stylesheet"
        />
      </Head>

      <nav className="register__nav">
        <div className="row">
          <Logo />

          <div className="register__progress">
            <ProgressBar value={progress} />
          </div>

          <div className="register__empty">
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          </div>
        </div>
      </nav>

      <FormikStepper initialValues={initialValues} onSubmit={onSubmit}>
        <FormikStep>
          <div className="register__form">
            <div className="register__header">
              <h2 className="heading heading--2">Home Care Request</h2>

              <p className="text-sm">
                Please complete this form if you would like to book a certified
                Caregiver - a trained Home Care Attendant or a licensed health
                professional (doctors, nurses, physiotherapists etc.) for the
                delivery of home care services.
              </p>
            </div>

            <TextArea
              id={"healthCondition"}
              name={"healthCondition"}
              label={
                "Briefly describe the present health and living condition of the Client (who require the care services.)"
              }
            />

            <TextArea
              id={"preferenceDescription"}
              name={"preferenceDescription"}
              label={
                "Please indicate any specific preferences you may have (e.g. for Caregiver's language, gender, knowledge of local geography etc.)"
              }
            />

            <CheckboxGroup
              options={selectServicesOptions}
              label={
                "Which of the following home care services are you seeking? (Services to be provided by the Caregiver Please tick all that apply)"
              }
              name={"services"}
            />

            <RadioBtnGroup
              options={existingConsumerOptions}
              label={"Are you an existing customer?"}
              name={"existingConsumer"}
            />

            <RadioBtnGroup
              options={bookingCapacityOptions}
              label={"In what capacity are you booking a Caregiver?"}
              name={"bookingCapacity"}
            />
          </div>
        </FormikStep>
        <FormikStep className="form__step-full">
          <div className="row">
            <div className="register__header">
              <h2 className="heading heading--2">Home Care Request</h2>

              <p className="text-sm">
                Please complete this form if you would like to book a certified
                Caregiver - a trained Home Care Attendant or a licensed health
                professional (doctors, nurses, physiotherapists etc.) for the
                delivery of home care services.
              </p>
            </div>

            <SplitScreen>
              <div className="sponspor__details">
                <h5 className="heading heading--5">Sponsor Details</h5>

                <div className="form__flex">
                  <InputField
                    type={"text"}
                    id={"sponsorDetailsFirstname"}
                    name={"sponsorDetails.firstname"}
                    label={"First name"}
                    placeholder={"First name"}
                  />

                  <InputField
                    type={"text"}
                    id={"sponsorDetailsLastname"}
                    name={"sponsorDetails.lastname"}
                    label={"Last name"}
                    placeholder={"Last name"}
                  />
                </div>

                <InputField
                  type={"email"}
                  id={"sponsorDetailsEmail"}
                  name={"sponsorDetails.email"}
                  label={"Email Address"}
                  placeholder={"same@gmail.com"}
                />

                <InputField
                  type={"number"}
                  id={"sponsorDetailsPhone"}
                  name={"sponsorDetails.phone"}
                  label={"Phone number"}
                  placeholder={"081**********"}
                />

                <div className="form__flex">
                  <SelectField
                    id="sponsorDetailsCountry"
                    name={"sponsorDetails.country"}
                    label="Country"
                    options={countryOptions}
                  />

                  <SelectField
                    name={"sponsorDetails.state"}
                    id="sponsorDetailsState"
                    label="State"
                    options={stateOptions}
                    onChange={(e) => {
                      setCurrentState(e.target.value);
                    }}
                  />
                </div>

                <div className="form__flex">
                  <SelectField
                    name={"sponsorDetails.lga"}
                    id="sponsorDetailsLga"
                    label="L.G.A"
                    options={lgasOptions}
                  />

                  <InputField
                    type={"text"}
                    id={"city"}
                    name={"city"}
                    label={"City"}
                    placeholder={"Enter your city"}
                  />
                </div>
              </div>

              <div className="beneficiary__details">
                <h5 className="heading heading--5">Beneficiary Details</h5>

                <div className="form__flex">
                  <InputField
                    type={"text"}
                    id={"beneficiaryDetailsFirstname"}
                    name={"beneficiaryDetails.firstname"}
                    label={"Beneficiary's Firstname"}
                    placeholder={"First name"}
                  />

                  <InputField
                    type={"text"}
                    id={"beneficiaryDetailsLastname"}
                    name={"beneficiaryDetails.lastname"}
                    label={"Beneficiary's Lastname"}
                    placeholder={"Last name"}
                  />
                </div>

                <div className="form__flex">
                  <InputField
                    type={"date"}
                    id={"beneficiaryDetailsDateOfBirth"}
                    name={"beneficiaryDetails.dateOfBirth"}
                    label={"Beneficiary Date of Birth"}
                    placeholder={"First name"}
                  />

                  <SelectField
                    options={genderOptions}
                    id={"beneficiaryDetailsGender"}
                    name={"beneficiaryDetails.gender"}
                    label={"Beneficiary Gender"}
                  />
                </div>

                <InputField
                  type={"number"}
                  id={"beneficiaryDetailsPhone"}
                  name={"beneficiaryDetails.phone"}
                  label={"Beneficiary Phone No."}
                  placeholder={"+234"}
                />

                <InputField
                  type={"email"}
                  id={"beneficiaryDetailsEmail"}
                  name={"beneficiaryDetails.email"}
                  label={"Beneficiary Email"}
                  placeholder={"same@gmail.com"}
                />

                <InputField
                  type={"text"}
                  id={"beneficiaryDetailsAddress"}
                  name={"beneficiaryDetails.address"}
                  label={"Beneficiary Address"}
                  placeholder={"Address"}
                />

                <div className="form__flex">
                  <SelectField
                    name={"beneficiaryDetails.state"}
                    id="beneficiaryDetailsState"
                    label="Beneficiary State"
                    options={stateOptions}
                    onChange={(e) => {
                      setCurrentState(e.target.value);
                    }}
                  />

                  <SelectField
                    name={"beneficiaryDetails.lga"}
                    id="beneficiaryDetailsLga"
                    label="L.G.A"
                    options={lgasOptions}
                  />
                </div>
              </div>
            </SplitScreen>
          </div>
        </FormikStep>
        <FormikStep className={"form__step-full"}>
          <div className="row">
            <div className="register__header">
              <h2 className="heading heading--2">Home Care Request</h2>

              <p className="text-sm">
                Please complete this form if you would like to book a certified
                Caregiver - a trained Home Care Attendant or a licensed health
                professional (doctors, nurses, physiotherapists etc.) for the
                delivery of home care services.
              </p>
            </div>

            <SplitScreen>
              <div className="emergency__details">
                <h5 className="heading heading--5">
                  Emergency Contact of the Client
                </h5>

                <div className="form__flex">
                  <InputField
                    type={"text"}
                    id={"emergencyDetailsFirstname"}
                    name={"emergencyDetails.firstname"}
                    label={"Firstname"}
                    placeholder={"First name"}
                  />

                  <InputField
                    type={"text"}
                    id={"emergencyDetailsLastname"}
                    name={"emergencyDetails.lastname"}
                    label={"Lastname"}
                    placeholder={"Last name"}
                  />
                </div>

                <InputField
                  type={"number"}
                  id={"sponsorDetailsPhone"}
                  name={"sponsorDetails.phone"}
                  label={"Phone number"}
                  placeholder={"081**********"}
                />

                <InputField
                  type={"email"}
                  id={"emergencyDetailsEmail"}
                  name={"emergencyDetails.email"}
                  label={"Email Address"}
                  placeholder={"same@gmail.com"}
                />

                <div className="form__flex">
                  <SelectField
                    name={"state"}
                    id="state"
                    label="State"
                    options={stateOptions}
                    onChange={(e) => {
                      setCurrentState(e.target.value);
                    }}
                  />

                  <SelectField
                    name={"lga"}
                    id="lga"
                    label="L.G.A"
                    options={lgasOptions}
                  />
                </div>
              </div>

              <div className="work__pattern">
                <CheckboxGroup
                  options={workPatternOptions}
                  label={
                    "Proposed Caregiver Work Pattern(Please tick all that apply)"
                  }
                  name={"workPattern"}
                />
              </div>
            </SplitScreen>

            <div className="form__term text-center">
              <div className="terms">
                <Checkbox
                  id={"terms"}
                  name={"terms"}
                  label={"Terms and Conditions"}
                  // onChange={handleChange}
                />

                <p>
                  By clicking this, I agree that GeroCare can create an account
                  for myself and the client so they can get reports and other
                  information about care service to me on their platform.
                </p>
              </div>
            </div>
          </div>
        </FormikStep>
      </FormikStepper>
    </>
  );
};

export default RequestCare;
